use core{*}

getNum :: (arr: []str, x, y: i32) -> i64
{
    if arr[x][y-1]->is_num()
    {
        if arr[x][y-2]->is_num()
        {
            return conv.parse_int(arr[x][y-2 .. y+1]);
        }
        else
        {
            if arr[x][y+1]->is_num()
            {
                return conv.parse_int(arr[x][y-1 .. y+2]);
            }
            else
            {
                return conv.parse_int(arr[x][y-1 .. y+1]);
            }
        }
    }
    elseif arr[x][y+1]->is_num()
    {
        if arr[x][y+2]->is_num()
        {
            return conv.parse_int(arr[x][y .. y+3]);
        }
        else
        {
            return conv.parse_int(arr[x][y .. y+2]);
        }
    }
    else
    {
        return cast(i64) (arr[x][y]);
    }
}

main :: ()
{
    file := os.get_contents("inputs/day3.txt");
    arr := string.split(file, '\n');
    len := arr[0].length;
    nums: [..] i64;
    sum: i64 = 0;

    for x: 1 .. 139
    {
        for y: 1 .. len-1
        {
            if arr[x][y] != '.' && !arr[x][y]->is_num()
            {
                // Top Left
                if arr[x-1][y-1]->is_num()
                {
                    nums << getNum(arr, x-1, y-1);
                }
                // Top
                if arr[x-1][y]->is_num()
                {
                    nums << getNum(arr, x-1, y);
                }
                // Top Right
                if arr[x-1][y+1]->is_num()
                {
                    nums << getNum(arr, x-1, y+1);
                }
                // Left
                if arr[x][y-1]->is_num()
                {
                    nums << getNum(arr, x, y-1);
                }
                // Right
                if arr[x][y+1]->is_num()
                {
                    nums << getNum(arr, x, y+1);
                }
                // Bottom Left
                if arr[x+1][y-1]->is_num()
                {
                    nums << getNum(arr, x+1, y-1);
                }
                // Bottom
                if arr[x+1][y]->is_num()
                {
                    nums << getNum(arr, x+1, y);
                }
                // Bottom Right
                if arr[x+1][y+1]->is_num()
                {
                    nums << getNum(arr, x+1, y+1);
                }

                array.unique(cast(&[] i64) &nums);
                println(nums);
                
                for item: nums
                {
                    sum += item;
                }
                array.clear(&nums);
            }
        }
    }

    printf("Part 1: {}\n", sum);
}